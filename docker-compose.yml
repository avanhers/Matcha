version: "3.7"

services:
  api:
    build: ./api
    restart: on-failure
    depends_on:
      - mysql
    volumes:
      - ./api:/usr/src/app
      # - ./api/node_modules:/usr/src/app/node_modules
    environment:
      PORT: 8080
      MYSQL_HOST: mysql
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_PORT: 3306
      SECRET_KEY: 18669f7cfcc6606d4ecd35dde7dc50e9eaa92667833b4566
      REFRESH_SECRET: bf0cf30bc7c58bd5cf18fd31121fdb10642fc18ea470d9b3

    hostname: api
    networks:
      - backend
    container_name: api

  mysql:
    image: mysql:5.7
    restart: on-failure
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: "matcha"
    tty: true
    volumes:
      - ./db:/var/lib/mysql
    hostname: mysql
    container_name: mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql
    ports:
      - 8081:80
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    networks:
      - backend
    container_name: pma_app

  reverse:
    image: nginx
    depends_on:
      - api
      - front
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./reverse/nginx.conf:/etc/nginx/nginx.conf
      - ./reverse/conf.d:/etc/nginx/conf.d
      - ./reverse/certs:/etc/ssl/private
    networks:
      - backend
      - frontend
    container_name: reverse

  front:
    build: ./App
    restart: on-failure
    volumes:
      - ./App:/usr/src/App
      # - ./api/node_modules:/usr/src/app/node_modules
    hostname: front
    tty: true
    ports:
      - 3000:3000
    networks:
      - frontend
    container_name: front

networks:
  backend:
  frontend:
